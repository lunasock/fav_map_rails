<div id='map'></div>

<script>
  var map;
  var markerBeer;
  var markerCoffee;
  var markerParking;
  var markerPlace;
  var coffee_image = "/images/coffee.png";
  var beer_image = "/images/beer2.png";
  var ramen_image = "/images/ramen.png";
  var parking_image = "/images/parking.png";
  var livehouse_image = "/images/livehouse.png";
  var place_image = "/images/place.png";
  function initMap(){
  
    getGeolocation()
    setInterval(getGeolocation, 10000)

    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 35.6628611, lng: 139.6972762},
      zoom: 15,
      mapTypeControl: false,
      streetViewControl: false,
      gestureHandling: 'cooperative',
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      styles: [
        {
          "featureType": "poi.business",
          "stylers": [
            {
              "visibility": "off"
            }
          ]
        },
        {
          "featureType": "poi.school",
          "stylers": [
            {
              "visibility": "off"
            }
          ]
        },
        {
          "featureType": "poi.school",
          "elementType": "labels.text",
          "stylers": [
            {
              "visibility": "off"
            }
          ]
        }
      ]
    });

    // クリックイベントを追加
    map.addListener('click', function(e) {
      // クリック地点にピンを描画
      getClickLatLng(e.latLng, map);
      // 逆ジオコーディング
      reverse(e.latLng);
    });
     
    // デフォルトの情報ウィンドウを非表示に
    // 特定のウィンドウを表示させるには noSuppress = true をオプションで指定
    var set;
    (function fixInfoWindow() {
        set = google.maps.InfoWindow.prototype.set;
        google.maps.InfoWindow.prototype.set = function(key, val) {
            if (key === "map") {
                if (! this.get("noSuppress")) {
                    return;
                }
            }
            set.apply(this, arguments);
        }
    })();
    
    // ラーメン屋
    // each_with_indexを使うと、0,1,2~と付与される
    // 変数に配列を格納
    var markerRamen = []
    var infoWindowRamen = []
    var contentStringRamen
    <% ramens.each_with_index do |ramen,index| %>
        markerRamen[<%= index %>] = new google.maps.Marker({
        map: map,
        icon: ramen_image,
        position: new google.maps.LatLng(
          <%= ramen.latitude %>, //latitude
          <%= ramen.longitude %>  //longitude
        )
        });

        contentStringRamen = '<div class="infoWindow-text"><%= link_to ramen.spot_name, spot_path(ramen) %></div>' + '<%= link_to spot_path(ramen) do %><%= attachment_image_tag ramen, :spot_image, :fill, 150, 150, format: 'jpeg', fallback: "/images/no_image.jpg", size: '150x150' %><% end %>'

        infoWindowRamen[<%= index %>] = new google.maps.InfoWindow({
        // ウィンドウを表示させる
        noSuppress:true,
        content: contentStringRamen
        }); 
        
        markerRamen[<%= index %>].addListener('click', function(){
          // 配列をまわし、全てのウィンドウ閉じる
          infoWindowRamen.forEach((value) => {
            value.close()
          });
          infoWindowBeer.forEach((value2) => {
            value2.close()
          });
          infoWindowCoffee.forEach((value3) => {
            value3.close()
          });
          infoWindowParking.forEach((value4) => {
            value4.close()
          });
          infoWindowPlace.forEach((value5) => {
            value5.close()
          });
          infoWindowLivehouse.forEach((value6) => {
            value6.close()
          });

          // 全てのウィンドウを閉じてからopen
          infoWindowRamen[<%= index %>].open(map, markerRamen[<%= index %>])
          // $('#table-spot-name').text(<%== "'#{ramen.spot_name}'" %>);
          // $('#table-spot-body').text(<%== "'#{ramen.spot_body}'" %>);
          // $('#table-spot-category').text(<%== "'#{ramen.category}'" %>);
          // $('#table-spot-address').text(<%== "'#{ramen.address}'" %>);
          // $('#table-spot-detail').val(<%= ramen.id %>);
        })
    <% end %>

    // 居酒屋屋
    // each_with_indexを使うと、0,1,2~と付与される
    // 変数に配列を格納
    var markerBeer = []
    var infoWindowBeer = []
    var contentStringBeer
    <% beers.each_with_index do |beer,index| %>
        markerBeer[<%= index %>] = new google.maps.Marker({
        map: map,
        icon: beer_image,
        position: new google.maps.LatLng(
          <%= beer.latitude %>, //latitude
          <%= beer.longitude %>  //longitude
        )
        });

        contentStringBeer = '<div class="infoWindow-text"><%= link_to beer.spot_name, spot_path(beer) %></div>' + '<%= link_to spot_path(beer) do %><%= attachment_image_tag beer, :spot_image, :fill, 150, 150, format: 'jpeg', fallback: "/images/no_image.jpg", size: '150x150' %><% end %>'

        infoWindowBeer[<%= index %>] = new google.maps.InfoWindow({
        // ウィンドウを表示させる
        noSuppress:true,
        content: contentStringBeer
        }); 
        
        markerBeer[<%= index %>].addListener('click', function(){
          // 配列をまわし、全てのウィンドウ閉じる
          infoWindowRamen.forEach((value) => {
            value.close()
          });
          infoWindowBeer.forEach((value2) => {
            value2.close()
          });
          infoWindowCoffee.forEach((value3) => {
            value3.close()
          });
          infoWindowParking.forEach((value4) => {
            value4.close()
          });
          infoWindowPlace.forEach((value5) => {
            value5.close()
          });
          infoWindowLivehouse.forEach((value6) => {
            value6.close()
          });
          // 全てのウィンドウを閉じてからopen
          infoWindowBeer[<%= index %>].open(map, markerBeer[<%= index %>])
          // $('#table-spot-name').text(<%== "'#{beer.spot_name}'" %>);
          // $('#table-spot-body').text(<%== "'#{beer.spot_body}'" %>);
          // $('#table-spot-category').text(<%== "'#{beer.category}'" %>);
          // $('#table-spot-address').text(<%== "'#{beer.address}'" %>);
        })
    <% end %>

    // 喫茶店
    // each_with_indexを使うと、0,1,2~と付与される
    // 変数に配列を格納
    var markerCoffee = []
    var infoWindowCoffee = []
    var contentStringCoffee;
    <% coffees.each_with_index do |coffee,index| %>
        markerCoffee[<%= index %>] = new google.maps.Marker({
        map: map,
        icon: coffee_image,
        position: new google.maps.LatLng(
          <%= coffee.latitude %>, //latitude
          <%= coffee.longitude %>  //longitude
        )
        });

        contentStringCoffee = '<div class="infoWindow-text"><%= link_to coffee.spot_name, spot_path(coffee) %></div>' + '<%= link_to spot_path(coffee) do %><%= attachment_image_tag coffee, :spot_image, :fill, 150, 150, format: 'jpeg', fallback: "/images/no_image.jpg", size: '150x150' %><% end %>'

        infoWindowCoffee[<%= index %>] = new google.maps.InfoWindow({
        // ウィンドウを表示させる
        noSuppress:true,
        content: contentStringCoffee
        }); 
        
        markerCoffee[<%= index %>].addListener('click', function(){
          // 配列をまわし、全てのウィンドウ閉じる
          infoWindowRamen.forEach((value) => {
            value.close()
          });
          infoWindowBeer.forEach((value2) => {
            value2.close()
          });
          infoWindowCoffee.forEach((value3) => {
            value3.close()
          });
          infoWindowParking.forEach((value4) => {
            value4.close()
          });
          infoWindowPlace.forEach((value5) => {
            value5.close()
          });
          infoWindowLivehouse.forEach((value6) => {
            value6.close()
          });
          // 全てのウィンドウを閉じてからopen
          infoWindowCoffee[<%= index %>].open(map, markerCoffee[<%= index %>])
          // $('#table-spot-name').text(<%== "'#{coffee.spot_name}'" %>);
          // $('#table-spot-body').text(<%== "'#{coffee.spot_body}'" %>);
          // $('#table-spot-category').text(<%== "'#{coffee.category}'" %>);
          // $('#table-spot-address').text(<%== "'#{coffee.address}'" %>);
        })
    <% end %>

    // 駐車場
    // each_with_indexを使うと、0,1,2~と付与される
    // 変数に配列を格納
    var markerParking = []
    var infoWindowParking = []
    var contentStringParking;
    <% parkings.each_with_index do |parking,index| %>
        markerParking[<%= index %>] = new google.maps.Marker({
        map: map,
        icon: parking_image,
        position: new google.maps.LatLng(
          <%= parking.latitude %>, //latitude
          <%= parking.longitude %>  //longitude
        )
        });

        contentStringParking = '<div class="infoWindow-text"><%= link_to parking.spot_name, spot_path(parking) %></div>' + '<%= link_to spot_path(parking) do %><%= attachment_image_tag parking, :spot_image, :fill, 150, 150, format: 'jpeg', fallback: "/images/no_image.jpg", size: '150x150' %><% end %>'

        infoWindowParking[<%= index %>] = new google.maps.InfoWindow({
        // ウィンドウを表示させる
        noSuppress:true,
        content: contentStringParking
        }); 
        
        markerParking[<%= index %>].addListener('click', function(){
          // 配列をまわし、全てのウィンドウ閉じる
          infoWindowRamen.forEach((value) => {
            value.close()
          });
          infoWindowBeer.forEach((value2) => {
            value2.close()
          });
          infoWindowCoffee.forEach((value3) => {
            value3.close()
          });
          infoWindowParking.forEach((value4) => {
            value4.close()
          });
          infoWindowPlace.forEach((value5) => {
            value5.close()
          });
          infoWindowLivehouse.forEach((value6) => {
            value6.close()
          });
          // 全てのウィンドウを閉じてからopen
          infoWindowParking[<%= index %>].open(map, markerParking[<%= index %>])
          // $('#table-spot-name').text(<%== "'#{parking.spot_name}'" %>);
          // $('#table-spot-body').text(<%== "'#{parking.spot_body}'" %>);
          // $('#table-spot-category').text(<%== "'#{parking.category}'" %>);
          // $('#table-spot-address').text(<%== "'#{parking.address}'" %>);
        })
    <% end %>

    // その他
    // each_with_indexを使うと、0,1,2~と付与される
    // 変数に配列を格納
    var markerPlace = []
    var infoWindowPlace = []
    var contentStringPlace;
    <% places.each_with_index do |place,index| %>
        markerPlace[<%= index %>] = new google.maps.Marker({
        map: map,
        icon: place_image,
        position: new google.maps.LatLng(
          <%= place.latitude %>, //latitude
          <%= place.longitude %>  //longitude
        )
        });

        contentStringPlace = '<div class="infoWindow-text"><%= link_to place.spot_name, spot_path(place) %></div>' + '<%= link_to spot_path(place) do %><%= attachment_image_tag place, :spot_image, :fill, 150, 150, format: 'jpeg', fallback: "/images/no_image.jpg", size: '150x150' %><% end %>'

        infoWindowPlace[<%= index %>] = new google.maps.InfoWindow({
        // ウィンドウを表示させる
        noSuppress:true,
        content: contentStringPlace
        }); 
        
        markerPlace[<%= index %>].addListener('click', function(){
          // 配列をまわし、全てのウィンドウ閉じる
          infoWindowRamen.forEach((value) => {
            value.close()
          });
          infoWindowBeer.forEach((value2) => {
            value2.close()
          });
          infoWindowCoffee.forEach((value3) => {
            value3.close()
          });
          infoWindowParking.forEach((value4) => {
            value4.close()
          });
          infoWindowPlace.forEach((value5) => {
            value5.close()
          });
          infoWindowLivehouse.forEach((value6) => {
            value6.close()
          });
          // 全てのウィンドウを閉じてからopen
          infoWindowPlace[<%= index %>].open(map, markerPlace[<%= index %>])
          // $('#table-spot-name').text(<%== "'#{place.spot_name}'" %>);
          // $('#table-spot-body').text(<%== "'#{place.spot_body}'" %>);
          // $('#table-spot-category').text(<%== "'#{place.category}'" %>);
          // $('#table-spot-address').text(<%== "'#{place.address}'" %>);
        })
    <% end %>

    // ライブハウス
    // each_with_indexを使うと、0,1,2~と付与される
    // 変数に配列を格納
    var markerLivehouse = []
    var infoWindowLivehouse = []
    var contentStringLivehouse
    <% livehouses.each_with_index do |livehouse,index| %>
        markerLivehouse[<%= index %>] = new google.maps.Marker({
        map: map,
        icon: livehouse_image,
        position: new google.maps.LatLng(
          <%= livehouse.latitude %>, //latitude
          <%= livehouse.longitude %>  //longitude
        )
        });

        contentStringLivehouse = '<div class="infoWindow-text"><%= link_to livehouse.spot_name, spot_path(livehouse) %></div>' + '<%= link_to spot_path(livehouse) do %><%= attachment_image_tag livehouse, :spot_image, :fill, 150, 150, format: 'jpeg', fallback: "/images/no_image.jpg", size: '150x150' %><% end %>'

        infoWindowLivehouse[<%= index %>] = new google.maps.InfoWindow({
        // ウィンドウを表示させる
        noSuppress:true,
        content: contentStringLivehouse
        }); 
        
        markerLivehouse[<%= index %>].addListener('click', function(){
          // 配列をまわし、全てのウィンドウ閉じる
          infoWindowRamen.forEach((value) => {
            value.close()
          });
          infoWindowBeer.forEach((value2) => {
            value2.close()
          });
          infoWindowCoffee.forEach((value3) => {
            value3.close()
          });
          infoWindowParking.forEach((value4) => {
            value4.close()
          });
          infoWindowPlace.forEach((value5) => {
            value5.close()
          });
          infoWindowLivehouse.forEach((value6) => {
            value6.close()
          });
          // 全てのウィンドウを閉じてからopen
          infoWindowLivehouse[<%= index %>].open(map, markerLivehouse[<%= index %>])
        })
    <% end %>

    // クリック地点にピンを描画
    var btn; 　　
    var marker;
    function getClickLatLng(lat_lng, map) {
      
      btn = document.getElementById('search-btn');
      btn.addEventListener('click', function() {
        if(marker){
          marker.setMap(null);
        }
      });
      
      //すでにピンが描画済みの場合、それを削除 
      if(marker){
        marker.setMap(null);
      }
      
      // 座標をフォームに表示
      $('#lat').val(lat_lng.lat());
      $('#lng').val(lat_lng.lng());
    
    　// マーカーを設置
      marker = new google.maps.Marker({
      position: lat_lng,
      map: map,
      });

      // 座標の中心をずらす
      // Map.panTo()はMapクラスのメソッドです。地図の位置座標を絶対的に移動できます。
      // map.panTo(lat_lng);

    }

    // 逆ジオコーディング
    var latlng;
    var geocoder;
    var address;
    function reverse(lat_lng){
      latlng = {lat: lat_lng.lat(), lng: lat_lng.lng()};
      geocoder = new google.maps.Geocoder();
      geocoder.geocode({
        latLng: latlng
      }, 
        function(results, status){
          if (status == google.maps.GeocoderStatus.OK && results[0].geometry) {
            address = results[0].formatted_address;
            $('#address_field').val(address);
          }
        }
      )
    }
  }

  // 住所検索
  var inputAddress;
  var geocoder;
  var searchBtn;
  function codeAddress(){

    map.addListener('click', function() {
      if(marker){
        marker.setMap(null);
      }
    });

    searchBtn = document.getElementById('search-btn');
    searchBtn.addEventListener('click', function() {
      if(marker){
        marker.setMap(null);
      }
    });
 
    geocoder = new google.maps.Geocoder()

    // 入力を取得
    inputAddress = document.getElementById('address').value;

    // geocodingしたあとmapを移動
    geocoder.geocode( { 'address': inputAddress}, function(results, status) {
      if (status == 'OK') {
  　　　　　　　　　　　　// map.setCenterで地図が移動
        map.setCenter(results[0].geometry.location);

        $('#lat').val(results[0].geometry.location.lat);
        $('#lng').val(results[0].geometry.location.lng);
        // erbは<% %>と一緒に””も剥ぐ
        // ＃{}で変数展開。文字列内に変数の値を置くときに使われる
        // ==はエスケープ回避。rawでも一緒
        $('#address_field').val(results[0].formatted_address);

  　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
        marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location
        });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }

  // 現在地取得
  var now_image = "/images/now.png";
  var nowMarker = null;
  var now = null;
  function getGeolocation(){
    if(nowMarker != null){
      nowMarker.setMap(null)
    }
    console.log(0);
    navigator.geolocation.getCurrentPosition(
      function (pos) { 
        nowMarker = new google.maps.Marker({
          map: map,
          position:new google.maps.LatLng(pos.coords.latitude,pos.coords.longitude),
          icon: now_image
        })
        now = pos;
      }
    )
  } 

  // 現在地へ移動
  function moveGeolocation(){
    map.setCenter(new google.maps.LatLng(now.coords.latitude,now.coords.longitude));
  }

  // ライブハウスへ移動
  function movelivehouse(){
    map.setCenter()
  }
</script>

 <%# application.html.erbに記述すると、redirect時などに表示されなくなる %>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBucemSsqWHgDVSWR5MJG9kEh2Zvl2yOWw&callback=initMap">
  </script>