version: "3.7"
services:
  # elastic:
  #   build: es
  #   # 指定したポートが外部に公開されるので、誰でもアクセスできる
  #   ports:
  #     - "9200:9200"
  #   # ホストのみにポートを公開
  #   expose:
  #     - 9300
  #   # elasticsearch.ymlに必要な設定
  #   environment:
  #     network.host: 0.0.0.0
  #     discovery.type: single-node
  #   # システム要件
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    environment:
      TAKE_FILE_OWNERSHIP: "true"
      network.host: "0.0.0.0"
      discovery.type: single-node
      http.port: "9200"
      transport.host: "0.0.0.0"
      transport.tcp.port: "9300"
      xpack.ml.enabled: "false"
      network_mode: "host"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  redis:
    image: redis
    ports:
      - "6379:6379"
    command: [redis-server]
    volumes:
      - redis-data:/data

  mysql:
    image: mysql/mysql-server:5.7
    command: ["--bind-address=0.0.0.0"]
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  webpack-dev-server:
    build:
      context: .
      dockerfile: Dockerfile-webpack-dev-server
    environment:
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
    ports:
      - 3035:3035
    volumes:
      - webpack-dev-server-data:/myapp/public/packs

  # コンテナ名
  app:
    # Dockerfileの場所
    build:
      context: .
      dockerfile: Dockerfile
    # 環境変数
    environment:
      MYSQL_USERNAME: app
      MYSQL_PASSWORD: password
      MYSQL_HOST: mysql
      WEBPACKER_DEV_SERVER_HOST: webpack-dev-server
      ELASTIC_HOST: "elastic"
      ELASTIC_PORT: "9200"
    # localhost3000番ポートあての通信を、コンテナ3000番ポートに転送
    ports:
      - "3000:3000"
    # 先に起動したいサービス名
    depends_on:
      - mysql
      - nginx
      - redis
      - webpack-dev-server
      - elastic
    links:
      - elastic
    # 以下のディレクトリを、ホストOS(PC)上で定義したボリュームにマウント
    volumes:
      - .:/app
      - fav_map_bundle:/app/vendor/bundle
      - fav_map_node_modules:/app/node_modules
      - fav_map_public:/app/public
      - fav_map_socket:/app/sockets
    # command: ["bundle", "exec", "puma", "-b", "unix:///app/sockets/puma.sock"]

  nginx:
    image: nginx:1.17
    ports:
      - "8080:80"
    command: [nginx]
    volumes: 
      - ./nginx.conf:/etc/nginx/nginx.conf
      - fav_map_public:/app/public
      - fav_map_socket:/app/sockets

# ホストOS(PC)上にボリュームを定義
volumes:
  mysql-data:
    driver: local
  fav_map_bundle:
    driver: local
  fav_map_node_modules:
    driver: local
  fav_map_public:
    driver: local
  fav_map_socket:
    driver: local
  redis-data:
    driver: local
  webpack-dev-server-data:
    driver: local
  elasticsearch-data:
    driver: local
